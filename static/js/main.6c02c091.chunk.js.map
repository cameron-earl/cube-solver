{"version":3,"sources":["components/Cube.module.css","helpers/cube.ts","components/Cube.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Color","createSideArr","c","Array","fill","arrValReplace","to","from","changes","change","Cube","arr","moveCount","this","Object","values","filter","map","console","log","sides","color","white","blue","orange","green","red","yellow","newCube","side","s","cubeObj","CubeComponent","useState","cubeArr","setCubeArr","cubeMoves","setCubeMoves","handleClick","i","rotateSide","cloneDeep","display","className","styles","sideContainer","sideColor","square","onClick","cubeContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,4BAA4B,MAAQ,oBAAoB,KAAO,mBAAmB,OAAS,qBAAqB,OAAS,qBAAqB,IAAM,kBAAkB,MAAQ,oBAAoB,OAAS,uB,gECD3PC,E,uFAAAA,O,iBAAAA,I,eAAAA,I,mBAAAA,I,iBAAAA,I,aAAAA,I,oBAAAA,M,KAaZ,IAAMC,EAAgB,SAACC,GAAD,OAAuB,IAAIC,MAAM,GAAGC,KAAKF,IAIzDG,EAAgB,SAACC,EAAaC,EAAeC,GACjDF,EAAE,YAAOA,GADiF,oBAEvEE,GAFuE,IAE1F,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BH,EAAGG,EAAO,IAAMF,EAAKE,EAAO,KAH4D,8BAK1F,OAAOH,GAiDMI,E,WAzCb,aAAe,yBAHRC,SAGO,OAFPC,UAAoB,EAGzBC,KAAKF,IAhBkC,YAAKG,OAAOC,OAAOf,GAAOgB,QAAO,SAAAd,GAAC,MAAiB,kBAANA,MAA6Be,IAAIhB,GAiBrHiB,QAAQC,IAAIN,KAAKF,K,8CAGnB,WAA+C,IAGzCS,EAHYC,EAA4B,uDAAbrB,EAAMsB,MAC9BA,EAA2CtB,EAA3CsB,MAAOC,EAAoCvB,EAApCuB,KAAMC,EAA8BxB,EAA9BwB,OAAQC,EAAsBzB,EAAtByB,MAAOC,EAAe1B,EAAf0B,IAAKC,EAAU3B,EAAV2B,OAClCC,EAAmBf,KAAKF,IAAIM,KAAI,SAAAY,GAAI,mBAAQA,MAElD,OAAQR,GACN,KAAKC,EACHF,EAAQ,CAACE,EAAOC,EAAMC,EAAQC,EAAOC,GACrC,MACF,KAAKH,EACHH,EAAQ,CAACG,EAAMC,EAAQF,EAAOI,EAAKC,GACnC,MACF,KAAKH,EACHJ,EAAQ,CAACI,EAAQF,EAAOC,EAAMI,EAAQF,GACtC,MACF,KAAKA,EACHL,EAAQ,CAACK,EAAOE,EAAQD,EAAKJ,EAAOE,GACpC,MACF,KAAKE,EACHN,EAAQ,CAACM,EAAKD,EAAOE,EAAQJ,EAAMD,GACnC,MACF,KAAKK,EACHP,EAAQ,CAACO,EAAQD,EAAKD,EAAOD,EAAQD,GAGzC,IAAMO,EAAajB,KAAKF,IAAIS,EAAM,IAClCQ,EAAQR,EAAM,IAAM,CAACU,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACvEF,EAAQR,EAAM,IAAMf,EAAcQ,KAAKF,IAAIS,EAAM,IAAKP,KAAKF,IAAIS,EAAM,IAAK,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAC/FQ,EAAQR,EAAM,IAAMf,EAAcQ,KAAKF,IAAIS,EAAM,IAAKP,KAAKF,IAAIS,EAAM,IAAK,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAC/FQ,EAAQR,EAAM,IAAMf,EAAcQ,KAAKF,IAAIS,EAAM,IAAKP,KAAKF,IAAIS,EAAM,IAAK,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAC/FQ,EAAQR,EAAM,IAAMf,EAAcQ,KAAKF,IAAIS,EAAM,IAAKP,KAAKF,IAAIS,EAAM,IAAK,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAC/FP,KAAKF,IAAMiB,EACXf,KAAKD,YACLM,QAAQC,IAAI,cAAeS,O,6CC9DzBG,EAAU,IAAIrB,EA0CLsB,MAxCf,WAA0B,IAAD,EAEOC,mBAASF,EAAQpB,KAFxB,mBAEhBuB,EAFgB,KAEPC,EAFO,OAGWF,mBAASF,EAAQnB,WAH5B,mBAGhBwB,EAHgB,KAGLC,EAHK,KAKvBnB,QAAQC,IAAIiB,EAAWF,GAEvB,IAAMI,EAAc,SAACpC,EAAUqC,GAAX,OAAyB,WACjC,IAANA,IACJR,EAAQS,WAAWtC,GACnBmC,EAAaN,EAAQnB,WACrBuB,EAAWM,IAAUV,EAAQpB,SAiBzB+B,EAAUR,EAAQjB,KANH,SAACY,EAAeU,GAAhB,OACnB,qBAAKI,UAAS,UAAKC,IAAO5C,EAAMuC,IAAlB,YAAyBK,IAAOC,eAA9C,SACE,qBAA8BF,UAAS,UAAKC,IAAO5C,EAAMuC,IAAlB,YAAyBK,IAAOf,MAAvE,SAAgFA,EAAKZ,KAVjE6B,EAUoFP,EAV/D,SAACrC,EAAUqC,GAAX,OAC3C,qBAEEI,UAAS,UAAKC,IAAOG,OAAZ,YAAsBH,IAAO5C,EAAME,KAC5C8C,QAASV,EAAYQ,EAAWP,GAHlC,SAIEA,GAJF,UACUvC,EAAM8C,GADhB,YAC8BP,EAD9B,YACmCrC,EADnC,gBASE,UAAaF,EAAMuC,GAAnB,WADF,UAAuEA,EAAvE,mBATqB,IAACO,KAgBxB,OACE,gCACE,8BAAMV,IACN,qBAAKO,UAAWC,IAAOK,cAAvB,SACGP,QCjCMQ,MANf,WACE,OACE,cAAC,EAAD,KCUWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c02c091.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"side\":\"Cube_side__14SoJ\",\"sideContainer\":\"Cube_sideContainer__3_yuK\",\"white\":\"Cube_white__1LsN8\",\"blue\":\"Cube_blue__25jd2\",\"orange\":\"Cube_orange__3qbTJ\",\"yellow\":\"Cube_yellow__3lDbx\",\"red\":\"Cube_red__1Gf39\",\"green\":\"Cube_green__114M1\",\"square\":\"Cube_square__D6PyE\"};","export enum Color {\r\n  white = 0,\r\n  blue,\r\n  orange,\r\n  green,\r\n  red,\r\n  yellow,\r\n}\r\n\r\nexport type sideArr = [Color, Color, Color, Color, Color, Color, Color, Color, Color];\r\n\r\nexport type cubeArr= [sideArr, sideArr, sideArr, sideArr, sideArr, sideArr];\r\n\r\nconst createSideArr = (c: Color): sideArr => new Array(9).fill(c) as sideArr;\r\n\r\nconst createSortedCubeArr = (): cubeArr => [...(Object.values(Color).filter(c => typeof c === 'number') as Color[])].map(createSideArr) as cubeArr;\r\n\r\nconst arrValReplace = (to: sideArr, from: sideArr, changes: [number, number][]): sideArr => {\r\n  to = [...to];\r\n  for (let change of changes) {\r\n    to[change[0]] = from[change[1]];\r\n  }\r\n  return to as sideArr;\r\n}\r\n\r\nclass Cube {\r\n\r\n  public arr: cubeArr;\r\n  public moveCount: number = 0;\r\n  \r\n  constructor() {\r\n    this.arr = createSortedCubeArr();\r\n    console.log(this.arr);\r\n  }\r\n\r\n  public rotateSide(color: Color = Color.white) {\r\n    const {white, blue, orange, green, red, yellow} = Color;\r\n    const newCube: cubeArr = this.arr.map(side => [...side]) as cubeArr;\r\n    let sides: Color[];\r\n    switch (color) {\r\n      case white:\r\n        sides = [white, blue, orange, green, red];\r\n        break;\r\n      case blue:\r\n        sides = [blue, orange, white, red, yellow];\r\n        break;\r\n      case orange:\r\n        sides = [orange, white, blue, yellow, green];\r\n        break;\r\n      case green:\r\n        sides = [green, yellow, red, white, orange];\r\n        break;\r\n      case red:\r\n        sides = [red, green, yellow, blue, white];\r\n        break;\r\n      case yellow:\r\n        sides = [yellow, red, green, orange, blue]\r\n        break;\r\n    }\r\n    const s: sideArr = this.arr[sides[0]];\r\n    newCube[sides[0]] = [s[6], s[3], s[0], s[7], s[4], s[1], s[8], s[5], s[2]];\r\n    newCube[sides[1]] = arrValReplace(this.arr[sides[1]], this.arr[sides[2]], [[6, 0], [3, 1], [0, 2]]);\r\n    newCube[sides[2]] = arrValReplace(this.arr[sides[2]], this.arr[sides[3]], [[0, 8], [1, 7], [2, 6]]);\r\n    newCube[sides[3]] = arrValReplace(this.arr[sides[3]], this.arr[sides[4]], [[8, 2], [7, 5], [6, 8]]);\r\n    newCube[sides[4]] = arrValReplace(this.arr[sides[4]], this.arr[sides[1]], [[2, 6], [5, 3], [8, 0]]);\r\n    this.arr = newCube;\r\n    this.moveCount++;\r\n    console.log('rotateWhite', newCube);\r\n  }\r\n}\r\n\r\nexport default Cube;\r\n","import React, { useState } from 'react'\r\nimport Cube, { Color, sideArr } from '../helpers/cube';\r\nimport styles from './Cube.module.css';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst cubeObj = new Cube();\r\n\r\nfunction CubeComponent() {\r\n\r\n  const [cubeArr, setCubeArr] = useState(cubeObj.arr);\r\n  const [cubeMoves, setCubeMoves] = useState(cubeObj.moveCount);\r\n\r\n  console.log(cubeMoves, cubeArr);\r\n\r\n  const handleClick = (c: Color, i: number) => () => {\r\n    if (i !== 4) return;\r\n    cubeObj.rotateSide(c);\r\n    setCubeMoves(cubeObj.moveCount);\r\n    setCubeArr(cloneDeep(cubeObj.arr));\r\n  } \r\n\r\n  const createSquareEl = (sideColor: Color) => (c: Color, i: number) => (\r\n    <div \r\n      key={`${Color[sideColor]}-${i}-${c}-square`} \r\n      className={`${styles.square} ${styles[Color[c]]}`}\r\n      onClick={handleClick(sideColor, i)}\r\n    >{i}</div>\r\n  );\r\n\r\n  const createSideEl = (side: sideArr, i: number) => (\r\n    <div className={`${styles[Color[i]]} ${styles.sideContainer}`} key={`${i}-sideContainer`}>\r\n      <div key={`${Color[i]}-side`} className={`${styles[Color[i]]} ${styles.side}`}>{side.map(createSquareEl(i))}</div>\r\n    </div>\r\n  );\r\n\r\n  const display = cubeArr.map(createSideEl);\r\n\r\n  return (\r\n    <div>\r\n      <div>{cubeMoves}</div>\r\n      <div className={styles.cubeContainer}>\r\n        {display}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CubeComponent;","import CubeComponent from './components/Cube';\n\nfunction App() {\n  return (\n    <CubeComponent></CubeComponent>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}