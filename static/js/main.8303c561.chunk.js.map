{"version":3,"sources":["components/Cube.module.css","helpers/cube.ts","helpers/helpers.ts","helpers/log.ts","components/LogDisplay.tsx","components/Cube.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Color","arrValReplace","to","from","changes","change","white","blue","orange","green","red","yellow","colors","createSideArr","c","Array","fill","transformMap","rotateSide","arr","color","newCube","map","side","sides","s","addLog","log","turns","newLog","lastLog","length","newTurns","pop","push","LogDisplay","props","logElements","l","i","CubeComponent","useState","cubeArr","setCubeArr","setLog","console","handleClick","isRightClick","ev","newCubeArr","preventDefault","createSquareEl","sideColor","className","styles","square","onClick","onContextMenu","createSideEl","aspect","sideContainer","frontDisplay","slice","rearDisplay","cubeContainer","viewContainer","App","Cube","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8303c561.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeContainer\":\"Cube_cubeContainer__3WmQR\",\"viewContainer\":\"Cube_viewContainer__1Th51\",\"side\":\"Cube_side__1h9vi\",\"sideContainer\":\"Cube_sideContainer__2PtPw\",\"white\":\"Cube_white__2ofh7\",\"orange\":\"Cube_orange__2ozpk\",\"blue\":\"Cube_blue__17vrH\",\"yellow\":\"Cube_yellow__2sOoc\",\"green\":\"Cube_green__1gGYf\",\"red\":\"Cube_red__SuXBa\",\"square\":\"Cube_square__2kjBO\"};","import { arrValReplace } from './helpers';\n\nexport enum Color {\n  white = 0,\n  blue,\n  orange,\n  green,\n  red,\n  yellow,\n}\n\nconst { white, blue, orange, green, red, yellow } = Color;\n\nconst colors = [white, blue, orange, green, red, yellow];\n\nexport type sideArr = [Color, Color, Color, Color, Color, Color, Color, Color, Color];\n\nexport type cubeArr = [sideArr, sideArr, sideArr, sideArr, sideArr, sideArr];\n\nconst createSideArr = (c: Color): sideArr => new Array(9).fill(c) as sideArr;\n\nexport const createSortedCubeArr = (): cubeArr => colors.map(createSideArr) as cubeArr;\n\nconst transformMap: { [key: number]: Color[] } = {\n  [white]: [white, blue, orange, green, red],\n  [blue]: [blue, orange, white, red, yellow],\n  [orange]: [orange, white, blue, yellow, green],\n  [green]: [green, yellow, red, white, orange],\n  [red]: [red, green, yellow, blue, white],\n  [yellow]: [yellow, red, green, orange, blue],\n};\n\nexport const rotateSide = (arr: cubeArr, color: Color = white, count: number = 1): cubeArr => {\n  const newCube: cubeArr = arr.map((side) => [...side]) as cubeArr;\n\n  let sides: Color[] = transformMap[color];\n\n  const s: sideArr = arr[sides[0]];\n  newCube[sides[0]] = [s[6], s[3], s[0], s[7], s[4], s[1], s[8], s[5], s[2]];\n  newCube[sides[1]] = arrValReplace(arr[sides[1]], arr[sides[2]], [\n    [6, 0],\n    [3, 1],\n    [0, 2],\n  ]);\n  newCube[sides[2]] = arrValReplace(arr[sides[2]], arr[sides[3]], [\n    [0, 8],\n    [1, 7],\n    [2, 6],\n  ]);\n  newCube[sides[3]] = arrValReplace(arr[sides[3]], arr[sides[4]], [\n    [8, 2],\n    [7, 5],\n    [6, 8],\n  ]);\n  newCube[sides[4]] = arrValReplace(arr[sides[4]], arr[sides[1]], [\n    [2, 6],\n    [5, 3],\n    [8, 0],\n  ]);\n  return newCube;\n};\n","import { sideArr } from './cube';\n\nexport const arrValReplace = (to: sideArr, from: sideArr, changes: [number, number][]): sideArr => {\n  to = [...to];\n  for (let change of changes) {\n    to[change[0]] = from[change[1]];\n  }\n  return to as sideArr;\n};\n","import { Color } from './cube';\n\nexport type LogEntry = [Color, number];\n\nexport type Log = LogEntry[];\n\nexport const addLog = (log: Log, c: Color, turns: number) => {\n  const newLog = [...log];\n\n  const lastLog = log[log.length - 1];\n\n  if (lastLog && lastLog[0] === c) {\n    const newTurns = (lastLog[1] + turns) % 4;\n    if (newTurns === 0) {\n      newLog.pop();\n    } else {\n      newLog[newLog.length - 1][1] = newTurns;\n    }\n  } else {\n    newLog.push([c, turns]);\n  }\n\n  return newLog;\n};\n","import React from 'react';\n\nimport { Color } from '../helpers/cube';\nimport { Log, LogEntry } from '../helpers/log';\n\ninterface LogDisplayProps {\n  log: Log;\n}\n\nfunction LogDisplay(props: LogDisplayProps) {\n  const { log } = props;\n\n  const logElements = log.map((l: LogEntry, i: number) => (\n    <div>\n      {Color[l[0]]} - {l[1]}\n    </div>\n  ));\n\n  return <div>{logElements}</div>;\n}\n\nexport default LogDisplay;\n","import React, { MouseEvent, useState } from 'react';\n\nimport { Color, createSortedCubeArr, rotateSide, sideArr } from '../helpers/cube';\nimport { addLog, Log } from '../helpers/log';\nimport styles from './Cube.module.css';\nimport LogDisplay from './LogDisplay';\n\nfunction CubeComponent() {\n  const [cubeArr, setCubeArr] = useState(createSortedCubeArr());\n  const [log, setLog] = useState([] as Log);\n\n  console.log(cubeArr);\n\n  const handleClick = (c: Color, i: number, isRightClick = false) => (ev: MouseEvent<HTMLDivElement>) => {\n    let newCubeArr;\n    if (isRightClick) {\n      newCubeArr = rotateSide(cubeArr, c);\n      newCubeArr = rotateSide(newCubeArr, c);\n      newCubeArr = rotateSide(newCubeArr, c);\n      ev.preventDefault();\n    } else {\n      newCubeArr = rotateSide(cubeArr, c);\n    }\n    setCubeArr(newCubeArr);\n    setLog(addLog(log, c, isRightClick ? 3 : 1));\n  };\n\n  const createSquareEl = (sideColor: Color) => (c: Color, i: number) => (\n    <div\n      key={`${Color[sideColor]}-${i}-${c}-square`}\n      className={`${styles.square} ${styles[Color[c]]}`}\n      onClick={handleClick(sideColor, i)}\n      onContextMenu={handleClick(sideColor, i, true)}\n    ></div>\n  );\n\n  const createSideEl = (aspect: number) => (side: sideArr, i: number) => {\n    const sideColor = aspect * 3 + i;\n    return (\n      <div className={`${styles[Color[sideColor]]} ${styles.sideContainer}`} key={`${sideColor}-sideContainer`}>\n        <div key={`${Color[sideColor]}-side`} className={`${styles[Color[sideColor]]} ${styles.side}`}>\n          {side.map(createSquareEl(i))}\n        </div>\n      </div>\n    );\n  };\n\n  const frontDisplay = cubeArr.slice(0, 3).map(createSideEl(0));\n  const rearDisplay = cubeArr.slice(3).map(createSideEl(1));\n\n  return (\n    <div>\n      <div className={styles.cubeContainer}>\n        <div className={styles.viewContainer}>{frontDisplay}</div>\n        <div className={styles.viewContainer}>{rearDisplay}</div>\n      </div>\n      <LogDisplay log={log}></LogDisplay>\n    </div>\n  );\n}\n\nexport default CubeComponent;\n","import CubeComponent from './components/Cube';\n\nfunction App() {\n  return (\n    <CubeComponent></CubeComponent>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}