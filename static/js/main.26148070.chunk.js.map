{"version":3,"sources":["components/Cube.module.css","helpers/cube.ts","helpers/SillyGooseError.ts","helpers/helpers.ts","helpers/log.ts","components/LogDisplay.tsx","components/Cube.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Color","SillyGooseError","m","Object","setPrototypeOf","prototype","Error","arrValReplace","to","from","changes","slice","change","randInt","min","max","Math","ceil","floor","random","randElement","a","length","white","blue","orange","green","red","yellow","colors","createSideArr","c","Array","fill","createMixedUpCubeArr","count","shuffleCube","map","arr","moves","deepCopy","i","turns","side","rotateSide","transformMap","temp","color","sides","s","addLog","log","newLog","lastLog","newTurns","pop","push","LogDisplay","props","maxLogs","fadeCount","increasePercent","pow","MIN_OPACITY","currentFadeCount","fadeCountOffset","calcOpacity","n","round","logElements","l","opacity","getOpacity","style","reverse","CubeComponent","useState","cubeArr","setCubeArr","setLog","handleClick","isRightClick","ev","newCubeArr","preventDefault","createSquareEl","sideColor","className","styles","square","onClick","onContextMenu","createSideEl","aspect","sideContainer","frontDisplay","rearDisplay","cubeContainer","viewContainer","App","Cube","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26148070.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeContainer\":\"Cube_cubeContainer__sV8uJ\",\"viewContainer\":\"Cube_viewContainer__2WvOJ\",\"side\":\"Cube_side__14SoJ\",\"sideContainer\":\"Cube_sideContainer__3_yuK\",\"white\":\"Cube_white__1LsN8\",\"orange\":\"Cube_orange__3qbTJ\",\"blue\":\"Cube_blue__25jd2\",\"yellow\":\"Cube_yellow__3lDbx\",\"green\":\"Cube_green__114M1\",\"red\":\"Cube_red__1Gf39\",\"square\":\"Cube_square__D6PyE\"};","import { arrValReplace, chunkSubstr, randElement, randInt } from './helpers';\nimport SillyGooseError from './SillyGooseError';\n\nexport enum Color {\n  white = 0,\n  blue,\n  orange,\n  green,\n  red,\n  yellow,\n}\n\nconst { white, blue, orange, green, red, yellow } = Color;\n\nconst colors = [white, blue, orange, green, red, yellow];\n\nexport const opposite = [yellow, green, red, blue, orange, white];\n\nexport type sideArr = [Color, Color, Color, Color, Color, Color, Color, Color, Color];\n\nexport type cubeArr = [sideArr, sideArr, sideArr, sideArr, sideArr, sideArr];\n\nconst createSideArr = (c: Color): sideArr => new Array(9).fill(c) as sideArr;\n\nexport const createSortedCubeArr = (): cubeArr => colors.map(createSideArr) as cubeArr;\n\nexport const createMixedUpCubeArr = (count?: number): cubeArr => shuffleCube(createSortedCubeArr(), count) as cubeArr;\n\nexport const shuffleCube = (arr: cubeArr, moves = 50): cubeArr => {\n  let a = deepCopy(arr);\n  for (let i = 0; i < moves; i++) {\n    const turns = randInt(1, 3);\n    const side = randElement(colors);\n    a = rotateSide(a, side, turns);\n  }\n  return a;\n};\n\nconst transformMap: { [key: number]: Color[] } = {\n  [white]: [white, blue, orange, green, red],\n  [blue]: [blue, orange, white, red, yellow],\n  [orange]: [orange, white, blue, yellow, green],\n  [green]: [green, yellow, red, white, orange],\n  [red]: [red, green, yellow, blue, white],\n  [yellow]: [yellow, red, green, orange, blue],\n};\n\nexport const deepCopy = (arr: cubeArr): cubeArr => {\n  // silly but highly optimized\n  return [\n    arr[0].slice(0),\n    arr[1].slice(0),\n    arr[2].slice(0),\n    arr[3].slice(0),\n    arr[4].slice(0),\n    arr[5].slice(0),\n  ] as cubeArr;\n};\n\nexport const rotateSide = (arr: cubeArr, color: Color = white, count = 1): cubeArr => {\n  const a = deepCopy(arr);\n  let temp: cubeArr;\n  const sides: Color[] = transformMap[color];\n\n  for (let i = 0; i < count; i++) {\n    temp = deepCopy(a);\n    const s: sideArr = temp[sides[0]];\n    a[sides[0]] = [s[6], s[3], s[0], s[7], s[4], s[1], s[8], s[5], s[2]];\n    a[sides[1]] = arrValReplace(temp[sides[1]], temp[sides[2]], [\n      [6, 0],\n      [3, 1],\n      [0, 2],\n    ]);\n    a[sides[2]] = arrValReplace(temp[sides[2]], temp[sides[3]], [\n      [0, 8],\n      [1, 7],\n      [2, 6],\n    ]);\n    a[sides[3]] = arrValReplace(temp[sides[3]], temp[sides[4]], [\n      [8, 2],\n      [7, 5],\n      [6, 8],\n    ]);\n    a[sides[4]] = arrValReplace(temp[sides[4]], temp[sides[1]], [\n      [2, 6],\n      [5, 3],\n      [8, 0],\n    ]);\n  }\n  return a;\n};\n\nexport const cubeArrToString = (arr: cubeArr): string => arr.reduce((str, side) => str + side.join(''), '');\n\nexport const cubeArrFromString = (str: string): cubeArr => {\n  if (str.length !== 6 * 9) throw new SillyGooseError(`That's not a cubeArr, silly goose!`);\n  return chunkSubstr(str, 9).map((s) => s.split('').map(Number)) as cubeArr;\n};\n","class SillyGooseError extends Error {\n  constructor(m: string) {\n    super(m);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, SillyGooseError.prototype);\n  }\n}\n\nexport default SillyGooseError;\n","import { sideArr } from './cube';\nimport SillyGooseError from './SillyGooseError';\n\nexport const arrValReplace = (to: sideArr, from: sideArr, changes: [number, number][]): sideArr => {\n  to = to.slice(0) as sideArr;\n  for (const change of changes) {\n    to[change[0]] = from[change[1]];\n  }\n  return to as sideArr;\n};\n\nexport const randInt = (min = 0, max = 9): number => {\n  if (max < min) throw new SillyGooseError('Max cannot be less than min, you silly goose.');\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const randElement = <T>(a: T[]): T => a[randInt(0, a.length - 1)];\n\nexport const roundToTwoDecimals = (n: number): number => Math.round(n * 100) / 100;\n\nexport const reverseArr = <T>(array: T[]): T[] => array.slice().reverse();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const timeFn = <T>(runCount: number, fn: (...args: any[]) => T, ...args: any[]): T => {\n  console.time(fn.name);\n  let result;\n  for (let i = 0; i < runCount; i++) {\n    result = fn(...args);\n  }\n  console.timeEnd(fn.name);\n  return result as T;\n};\n\nexport const isObjectEmpty = (obj: Record<string, unknown>): boolean => {\n  for (const i in obj) return false;\n  return true;\n};\n\nexport const chunkSubstr = (str: string, size: number): string[] => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substr(o, size);\n  }\n\n  return chunks;\n};\n","import { Color } from './cube';\n\nexport type LogEntry = [Color, number];\n\nexport type Log = LogEntry[];\n\nexport const addLog = (log: Log, c: Color, turns: number): Log => {\n  const newLog = [...log];\n\n  const lastLog = log[log.length - 1];\n\n  if (lastLog && lastLog[0] === c) {\n    const newTurns = (lastLog[1] + turns) % 4;\n    if (newTurns === 0) {\n      newLog.pop();\n    } else {\n      newLog[newLog.length - 1][1] = newTurns;\n    }\n  } else {\n    newLog.push([c, turns]);\n  }\n\n  return newLog;\n};\n","import React from 'react';\n\nimport { Color } from '../helpers/cube';\nimport { roundToTwoDecimals } from '../helpers/helpers';\nimport { Log, LogEntry } from '../helpers/log';\n\ninterface LogDisplayProps {\n  log: Log;\n  maxLogs: number;\n}\n\nconst MIN_OPACITY = 0.15;\nconst FADE_COUNT = 3;\n\nconst LogDisplay: React.FC<LogDisplayProps> = (props: LogDisplayProps) => {\n  const { log, maxLogs } = props;\n\n  const fadeCount = Math.min(maxLogs, FADE_COUNT);\n  const increasePercent = Math.pow(2, 1 / fadeCount) * Math.pow(MIN_OPACITY + 1, -1 / fadeCount);\n  const currentFadeCount = log.length + fadeCount - maxLogs;\n  const fadeCountOffset = fadeCount - currentFadeCount;\n\n  const calcOpacity = (i: number): number =>\n    roundToTwoDecimals((1 + MIN_OPACITY) * Math.pow(increasePercent, i + fadeCountOffset) - 1);\n\n  const getOpacity = (i: number): number | '' => (i >= currentFadeCount ? '' : calcOpacity(i));\n\n  const logElements = log\n    .map((l: LogEntry, i: number) => {\n      const opacity = getOpacity(i);\n      if (typeof opacity === 'number' && opacity < 0) return '';\n      return (\n        <div key={`${i}-log`} style={{ opacity }}>\n          {i + 1}. {Color[l[0]]} - {l[1]}\n        </div>\n      );\n    })\n    .reverse();\n\n  return <div>{logElements}</div>;\n};\n\nexport default LogDisplay;\n","import React, { MouseEvent, useState } from 'react';\n\nimport { Color, createMixedUpCubeArr, rotateSide, sideArr } from '../helpers/cube';\nimport { addLog, Log } from '../helpers/log';\n// import { populateSolutionMap } from '../helpers/solver';\nimport styles from './Cube.module.css';\nimport LogDisplay from './LogDisplay';\n\n// TODO: enable with solver\n// populateSolutionMap();\n\nconst CubeComponent: React.FC = () => {\n  const [cubeArr, setCubeArr] = useState(() => createMixedUpCubeArr());\n  const [log, setLog] = useState([] as Log);\n\n  const handleClick = (c: Color, i: number, isRightClick = false) => (ev: MouseEvent<HTMLDivElement>) => {\n    const turns = isRightClick ? 3 : 1;\n    const newCubeArr = rotateSide(cubeArr, c, turns);\n    setCubeArr(newCubeArr);\n    setLog(addLog(log, c, turns));\n    ev.preventDefault();\n  };\n\n  const createSquareEl = (sideColor: Color) => (c: Color, i: number) => (\n    <div\n      key={`${Color[sideColor]}-${i}-${c}-square`}\n      className={`${styles.square} ${styles[Color[c]]}`}\n      onClick={handleClick(sideColor, i)}\n      onContextMenu={handleClick(sideColor, i, true)}\n    ></div>\n  );\n\n  const createSideEl = (aspect: number) => (side: sideArr, i: number) => {\n    const sideColor = aspect * 3 + i;\n    return (\n      <div className={`${styles[Color[sideColor]]} ${styles.sideContainer}`} key={`${sideColor}-sideContainer`}>\n        <div key={`${Color[sideColor]}-side`} className={`${styles[Color[sideColor]]} ${styles.side}`}>\n          {side.map(createSquareEl(sideColor))}\n        </div>\n      </div>\n    );\n  };\n\n  const frontDisplay = cubeArr.slice(0, 3).map(createSideEl(0));\n  const rearDisplay = cubeArr.slice(3).map(createSideEl(1));\n\n  return (\n    <div>\n      <div className={styles.cubeContainer}>\n        <div className={styles.viewContainer}>{frontDisplay}</div>\n        <div className={styles.viewContainer}>{rearDisplay}</div>\n      </div>\n      <LogDisplay log={log} maxLogs={20}></LogDisplay>\n    </div>\n  );\n};\n\nexport default CubeComponent;\n","import CubeComponent from './components/Cube';\nimport React from 'react';\n\nconst App: React.FC = () => {\n  return <CubeComponent></CubeComponent>;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}